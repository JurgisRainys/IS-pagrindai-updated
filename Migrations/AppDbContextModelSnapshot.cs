// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using project2.Entities.Models;
using System;

namespace project2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<int>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("project2.Entities.Models.Ivertinimai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Aprasymas")
                        .IsRequired()
                        .HasColumnName("aprasymas")
                        .HasColumnType("text");

                    b.Property<double>("Balas")
                        .HasColumnName("balas");

                    b.Property<int>("FkPirkejas")
                        .HasColumnName("fk_pirkejas");

                    b.Property<int>("FkTiekejas")
                        .HasColumnName("fk_tiekejas");

                    b.Property<string>("Pavadinimas")
                        .IsRequired()
                        .HasColumnName("pavadinimas")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("FkPirkejas");

                    b.HasIndex("FkTiekejas");

                    b.ToTable("Ivertinimai");
                });

            modelBuilder.Entity("project2.Entities.Models.Komentarai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("Busena")
                        .HasColumnName("busena");

                    b.Property<DateTime>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<int>("FkPreke")
                        .HasColumnName("fk_preke");

                    b.Property<int>("FkVartotojas")
                        .HasColumnName("fk_vartotojas");

                    b.Property<string>("Pavadinimas")
                        .IsRequired()
                        .HasColumnName("pavadinimas")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Tekstas")
                        .IsRequired()
                        .HasColumnName("tekstas")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Busena");

                    b.HasIndex("FkPreke");

                    b.HasIndex("FkVartotojas");

                    b.ToTable("Komentarai");
                });

            modelBuilder.Entity("project2.Entities.Models.KomentaroBusenos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Komentaro_busenos");
                });

            modelBuilder.Entity("project2.Entities.Models.KrepselioPrekes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("FkPirkejas")
                        .HasColumnName("fk_pirkejas");

                    b.Property<int>("FkPreke")
                        .HasColumnName("fk_preke");

                    b.Property<DateTime>("IkelimoData")
                        .HasColumnName("ikelimo_data")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("FkPirkejas");

                    b.HasIndex("FkPreke");

                    b.ToTable("Krepselio_prekes");
                });

            modelBuilder.Entity("project2.Entities.Models.Mokejimai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("Busena")
                        .HasColumnName("busena");

                    b.Property<DateTime>("Data")
                        .HasColumnName("data")
                        .HasColumnType("datetime");

                    b.Property<int>("FkUzsakymas")
                        .HasColumnName("fk_uzsakymas");

                    b.HasKey("Id");

                    b.HasIndex("Busena");

                    b.HasIndex("FkUzsakymas")
                        .IsUnique()
                        .HasName("UQ__Mokejima__A4D84B9F0267F94B");

                    b.ToTable("Mokejimai");
                });

            modelBuilder.Entity("project2.Entities.Models.MokejimoBusenos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Mokejimo_busenos");
                });

            modelBuilder.Entity("project2.Entities.Models.Preke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("Busena")
                        .HasColumnName("busena");

                    b.Property<int>("FkTiekejas")
                        .HasColumnName("fk_tiekejas");

                    b.Property<DateTime>("IkelimoData")
                        .HasColumnName("ikelimo_data")
                        .HasColumnType("date");

                    b.Property<decimal>("Kaina")
                        .HasColumnName("kaina")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<double>("Nuolaida")
                        .HasColumnName("nuolaida");

                    b.Property<string>("Nuotrauka")
                        .IsRequired()
                        .HasColumnName("nuotrauka")
                        .HasColumnType("text");

                    b.Property<string>("Pavadinimas")
                        .IsRequired()
                        .HasColumnName("pavadinimas")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("Tipas")
                        .HasColumnName("tipas");

                    b.HasKey("Id");

                    b.HasIndex("Busena");

                    b.HasIndex("FkTiekejas");

                    b.HasIndex("Tipas");

                    b.ToTable("Preke");
                });

            modelBuilder.Entity("project2.Entities.Models.PrekesAprasymoLaukai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Aprasymas")
                        .IsRequired()
                        .HasColumnName("aprasymas")
                        .HasColumnType("text");

                    b.Property<int>("FkPreke")
                        .HasColumnName("fk_preke");

                    b.Property<string>("Laukas")
                        .IsRequired()
                        .HasColumnName("laukas")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("FkPreke");

                    b.ToTable("Prekes_aprasymo_laukai");
                });

            modelBuilder.Entity("project2.Entities.Models.PrekesBusenos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Prekes_busenos");
                });

            modelBuilder.Entity("project2.Entities.Models.PrekesTipai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Prekes_tipai");
                });

            modelBuilder.Entity("project2.Entities.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("project2.Entities.Models.Statymai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("Busena")
                        .HasColumnName("busena");

                    b.Property<int>("FkPirkejasid")
                        .HasColumnName("fk_Pirkejasid");

                    b.Property<int>("FkPrekeid")
                        .HasColumnName("fk_Prekeid");

                    b.Property<DateTime>("StatymoData")
                        .HasColumnName("statymo_data")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Suma")
                        .HasColumnName("suma")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<DateTime>("UzdarymoData")
                        .HasColumnName("uzdarymo_data")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Busena");

                    b.HasIndex("FkPirkejasid");

                    b.HasIndex("FkPrekeid");

                    b.ToTable("Statymai");
                });

            modelBuilder.Entity("project2.Entities.Models.StatymoBusenos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Statymo_busenos");
                });

            modelBuilder.Entity("project2.Entities.Models.StebimosPrekes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("FkPreke")
                        .HasColumnName("fk_preke");

                    b.Property<int>("FkPrikejas")
                        .HasColumnName("fk_prikejas");

                    b.Property<DateTime>("IkelimoData")
                        .HasColumnName("ikelimo_data")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("FkPreke");

                    b.HasIndex("FkPrikejas");

                    b.ToTable("Stebimos_prekes");
                });

            modelBuilder.Entity("project2.Entities.Models.Uzsakymai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("Busena")
                        .HasColumnName("busena");

                    b.Property<int>("FkPirkejas")
                        .HasColumnName("fk_pirkejas");

                    b.Property<decimal>("Kaina")
                        .HasColumnName("kaina")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<DateTime>("PateikimoData")
                        .HasColumnName("pateikimo_data")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UzdarymoData")
                        .HasColumnName("uzdarymo_data")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Busena");

                    b.HasIndex("FkPirkejas");

                    b.ToTable("Uzsakymai");
                });

            modelBuilder.Entity("project2.Entities.Models.UzsakymoBusenos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Uzsakymo_busenos");
                });

            modelBuilder.Entity("project2.Entities.Models.UzsakymoPrekes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("FkPreke")
                        .HasColumnName("fk_preke");

                    b.Property<int>("FkUzsakymas")
                        .HasColumnName("fk_uzsakymas");

                    b.HasKey("Id");

                    b.HasIndex("FkPreke");

                    b.HasIndex("FkUzsakymas");

                    b.ToTable("Uzsakymo_prekes");
                });

            modelBuilder.Entity("project2.Entities.Models.Vartotojai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Adresas")
                        .HasColumnName("adresas")
                        .HasColumnType("text");

                    b.Property<bool>("ArAktyvus")
                        .HasColumnName("ar_aktyvus");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("ElPastas")
                        .IsRequired()
                        .HasColumnName("el_pastas")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("Pavarde")
                        .IsRequired()
                        .HasColumnName("pavarde")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<string>("Slaptazodis")
                        .IsRequired()
                        .HasColumnName("slaptazodis")
                        .HasColumnType("text");

                    b.Property<DateTime>("SukurimoData")
                        .HasColumnName("sukurimo_data")
                        .HasColumnType("datetime");

                    b.Property<string>("Telefonas")
                        .HasColumnName("telefonas")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<int>("Tipas")
                        .HasColumnName("tipas");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<string>("Vardas")
                        .IsRequired()
                        .HasColumnName("vardas")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("Tipas");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("project2.Entities.Models.VartotojoTipai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Vartotojo_tipai");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("project2.Entities.Models.Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("project2.Entities.Models.Vartotojai")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("project2.Entities.Models.Vartotojai")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("project2.Entities.Models.Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("project2.Entities.Models.Vartotojai")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("project2.Entities.Models.Vartotojai")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("project2.Entities.Models.Ivertinimai", b =>
                {
                    b.HasOne("project2.Entities.Models.Vartotojai", "FkPirkejasNavigation")
                        .WithMany("IvertinimaiFkPirkejasNavigation")
                        .HasForeignKey("FkPirkejas")
                        .HasConstraintName("FK__Ivertinim__fk_pi__47DBAE45");

                    b.HasOne("project2.Entities.Models.Vartotojai", "FkTiekejasNavigation")
                        .WithMany("IvertinimaiFkTiekejasNavigation")
                        .HasForeignKey("FkTiekejas")
                        .HasConstraintName("FK__Ivertinim__fk_ti__48CFD27E");
                });

            modelBuilder.Entity("project2.Entities.Models.Komentarai", b =>
                {
                    b.HasOne("project2.Entities.Models.KomentaroBusenos", "BusenaNavigation")
                        .WithMany("Komentarai")
                        .HasForeignKey("Busena")
                        .HasConstraintName("FK__Komentara__busen__5441852A");

                    b.HasOne("project2.Entities.Models.Preke", "FkPrekeNavigation")
                        .WithMany("Komentarai")
                        .HasForeignKey("FkPreke")
                        .HasConstraintName("FK__Komentara__fk_pr__5629CD9C");

                    b.HasOne("project2.Entities.Models.Vartotojai", "FkVartotojasNavigation")
                        .WithMany("Komentarai")
                        .HasForeignKey("FkVartotojas")
                        .HasConstraintName("FK__Komentara__fk_va__5535A963");
                });

            modelBuilder.Entity("project2.Entities.Models.KrepselioPrekes", b =>
                {
                    b.HasOne("project2.Entities.Models.Vartotojai", "FkPirkejasNavigation")
                        .WithMany("KrepselioPrekes")
                        .HasForeignKey("FkPirkejas")
                        .HasConstraintName("FK__Krepselio__fk_pi__656C112C");

                    b.HasOne("project2.Entities.Models.Preke", "FkPrekeNavigation")
                        .WithMany("KrepselioPrekes")
                        .HasForeignKey("FkPreke")
                        .HasConstraintName("FK__Krepselio__fk_pr__66603565");
                });

            modelBuilder.Entity("project2.Entities.Models.Mokejimai", b =>
                {
                    b.HasOne("project2.Entities.Models.MokejimoBusenos", "BusenaNavigation")
                        .WithMany("Mokejimai")
                        .HasForeignKey("Busena")
                        .HasConstraintName("FK__Mokejimai__busen__6A30C649");

                    b.HasOne("project2.Entities.Models.Uzsakymai", "FkUzsakymasNavigation")
                        .WithOne("Mokejimai")
                        .HasForeignKey("project2.Entities.Models.Mokejimai", "FkUzsakymas")
                        .HasConstraintName("FK__Mokejimai__fk_uz__6B24EA82");
                });

            modelBuilder.Entity("project2.Entities.Models.Preke", b =>
                {
                    b.HasOne("project2.Entities.Models.PrekesBusenos", "BusenaNavigation")
                        .WithMany("Preke")
                        .HasForeignKey("Busena")
                        .HasConstraintName("FK__Preke__busena__4CA06362");

                    b.HasOne("project2.Entities.Models.Vartotojai", "FkTiekejasNavigation")
                        .WithMany("Preke")
                        .HasForeignKey("FkTiekejas")
                        .HasConstraintName("FK__Preke__fk_tiekej__4D94879B");

                    b.HasOne("project2.Entities.Models.PrekesTipai", "TipasNavigation")
                        .WithMany("Preke")
                        .HasForeignKey("Tipas")
                        .HasConstraintName("FK__Preke__tipas__4BAC3F29");
                });

            modelBuilder.Entity("project2.Entities.Models.PrekesAprasymoLaukai", b =>
                {
                    b.HasOne("project2.Entities.Models.Preke", "FkPrekeNavigation")
                        .WithMany("PrekesAprasymoLaukai")
                        .HasForeignKey("FkPreke")
                        .HasConstraintName("FK__Prekes_ap__fk_pr__6E01572D");
                });

            modelBuilder.Entity("project2.Entities.Models.Statymai", b =>
                {
                    b.HasOne("project2.Entities.Models.StatymoBusenos", "BusenaNavigation")
                        .WithMany("Statymai")
                        .HasForeignKey("Busena")
                        .HasConstraintName("FK__Statymai__busena__59063A47");

                    b.HasOne("project2.Entities.Models.Vartotojai", "FkPirkejas")
                        .WithMany("Statymai")
                        .HasForeignKey("FkPirkejasid")
                        .HasConstraintName("FK__Statymai__fk_Pir__59FA5E80");

                    b.HasOne("project2.Entities.Models.Preke", "FkPreke")
                        .WithMany("Statymai")
                        .HasForeignKey("FkPrekeid")
                        .HasConstraintName("FK__Statymai__fk_Pre__5AEE82B9");
                });

            modelBuilder.Entity("project2.Entities.Models.StebimosPrekes", b =>
                {
                    b.HasOne("project2.Entities.Models.Preke", "FkPrekeNavigation")
                        .WithMany("StebimosPrekes")
                        .HasForeignKey("FkPreke")
                        .HasConstraintName("FK__Stebimos___fk_pr__5EBF139D");

                    b.HasOne("project2.Entities.Models.Vartotojai", "FkPrikejasNavigation")
                        .WithMany("StebimosPrekes")
                        .HasForeignKey("FkPrikejas")
                        .HasConstraintName("FK__Stebimos___fk_pr__5DCAEF64");
                });

            modelBuilder.Entity("project2.Entities.Models.Uzsakymai", b =>
                {
                    b.HasOne("project2.Entities.Models.UzsakymoBusenos", "BusenaNavigation")
                        .WithMany("Uzsakymai")
                        .HasForeignKey("Busena")
                        .HasConstraintName("FK__Uzsakymai__busen__5070F446");

                    b.HasOne("project2.Entities.Models.Vartotojai", "FkPirkejasNavigation")
                        .WithMany("Uzsakymai")
                        .HasForeignKey("FkPirkejas")
                        .HasConstraintName("FK__Uzsakymai__fk_pi__5165187F");
                });

            modelBuilder.Entity("project2.Entities.Models.UzsakymoPrekes", b =>
                {
                    b.HasOne("project2.Entities.Models.Preke", "FkPrekeNavigation")
                        .WithMany("UzsakymoPrekes")
                        .HasForeignKey("FkPreke")
                        .HasConstraintName("FK__Uzsakymo___fk_pr__619B8048");

                    b.HasOne("project2.Entities.Models.Uzsakymai", "FkUzsakymasNavigation")
                        .WithMany("UzsakymoPrekes")
                        .HasForeignKey("FkUzsakymas")
                        .HasConstraintName("FK__Uzsakymo___fk_uz__628FA481");
                });

            modelBuilder.Entity("project2.Entities.Models.Vartotojai", b =>
                {
                    b.HasOne("project2.Entities.Models.VartotojoTipai", "TipasNavigation")
                        .WithMany("Vartotojai")
                        .HasForeignKey("Tipas")
                        .HasConstraintName("FK__Vartotoja__tipas__44FF419A");
                });
#pragma warning restore 612, 618
        }
    }
}
